//-----CUSTOM NAME FOR SERIAL PORT, SERIAL IS "BACKCHANNEL UART" AND SERIAL1 IS "REGULAR UART"-----//
//#define XBeeSerial Serial1

#define LED P4_7

//-----INITIALIZE LARGE CHAR ARRAYS FOR MESSAGE RECEIVING-----//
char PacketRxCC[75];
char PacketRxROV[75];

//-----EXAMPLE CONTROL PACKET FOR TEST/DEBUG-----//
//char test[] = "C,LTx1200,LTy1000,RTx0,RTy-800,AVa10,Xva10;";

//-----PACKET IDS-----//
char SensorID = 'S';
char ControlID = 'C';
char GPSID = 'L';
char PauseID = 'p';
char Order66ID = 'f';
char ShutdownID = 'b';
char InitID = 'z';

//-----SETUP FOR PINS AND SERIAL COMMUNICATION-----//
void setup() {
  
  //-----WAIT FOR HARDWARE SERIAL TO APPEAR-----//
  while (!Serial);
  while (!Serial1);

  //-----INITIALIZE DIGITAL PIN AS OUTPUT-----//
  pinMode(LED, OUTPUT);

  //-----BEGIN BACKCHANNEL UART AT 9600 BAUD RATE-----//
  Serial.begin(38400);
  
  //-----BEGIN REGULAR UART AT 9600 BAUD RATE-----//
  Serial1.begin(19200);

  //-----DELAY TO ALLOW UART COMMS TO BEGIN
  delay(1000);

  //-----CLEAR TX AND RX BUFFERS-----//

  //-----CLEAR REGULAR UART TX BUFFER-----//
  Serial1.flush();
  //-----CLEAR REGULAR UART RX BUFFER-----//
  //Serial1.read();
  //-----CLEAR BACKCHANNEL UART TX BUFFER-----//
  Serial.flush();
  //-----CLEAR BACKCHANNEL UART RX BUFFER-----//
  //Serial.read();
  Serial.println("SETUP DONE");
}


//-----MAIN LOOP OF BUOY PROGRAM-----//
void loop() {
  
  //-----BLINK LED FOR DEBUG/TEST HEARTBEAT-----//
  digitalWrite(LED, HIGH);
  delay(1);
  digitalWrite(LED, LOW);
  delay(1);

  //-----INITAIALIZE ARRAYS TO 0'S-----//
  for(int i = 0; i < 75; i++){
    PacketRxROV[i] = '0';
    PacketRxCC[i] = '0';
  }

  //-----INITIALIZE CHAR X VARIABLE TO CHECK
  char x = '0';
  char y = '0';

  //-----INITIALIZE COUNT FOR ARRAY SIZE/PLACEMENT-----//
  int count = 0;
  
  //Serial.flush();

  //-----RECEIVE EACH CHAR AND ADD TO ARRAY, STOP WHEN CHAR EQUALS SEMICOLON-----//    
  //if(Serial1.available()){
    x = Serial1.read();
    if(x == ControlID || x == PauseID || x == InitID || x == Order66ID){
      PacketRxCC[0] = x;
      count++;
      Serial.write(x);
      while(x != ';') {
        if (Serial1.available()) {
          x = Serial1.read();
          PacketRxCC[count] = x;
          //if(PacketRxCC[0] == ControlID || PacketRxCC[0] == PauseID || PacketRxCC[0] == InitID || PacketRxCC[0] == Order66ID){
            Serial.write(PacketRxCC[count]);
          //}
          if(PacketRxCC[0] == ShutdownID){
            Serial.write("Buoy Shutdown;");//BOUY shutdown
          }
          count++;
        }
      }
    }
  //}
  //Serial.write("C,44,33,22,11,0,0,0;");
  
  //-----RECEIVE EACH CHAR AND ADD TO ARRAY, STOP WHEN CHAR EQUALS SEMICOLON-----//

  //Reset count variable to 
  count = 0;
  //if(Serial.available()){
    y = Serial.read();
    if (y == SensorID){
      PacketRxROV[count] = y;
      count++;
      Serial1.write(y);
      while(y != ';') {
        if (Serial.available()) {
          y = Serial.read();
          PacketRxROV[count] = y;
          //if(PacketRxROV[0] == SensorID){
            Serial1.write(PacketRxROV[count]);
          //}
          count++;
        }
      }
    }
  //}
    //Serial1.write("S,55,44,33,22,11,0,0,0;");

}

